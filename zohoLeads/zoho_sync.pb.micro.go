// Code generated by protoc-gen-micro. DO NOT EDIT.
// source: zohoLeads/zoho_sync.proto

package zohoSync

import (
	fmt "fmt"
	common "github.com/cargod-bj/b2c-proto-common/common"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

import (
	context "context"
	api "github.com/micro/go-micro/v2/api"
	client "github.com/micro/go-micro/v2/client"
	server "github.com/micro/go-micro/v2/server"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// Reference imports to suppress errors if they are not otherwise used.
var _ api.Endpoint
var _ context.Context
var _ client.Option
var _ server.Option

// Api Endpoints for ZohoSync service

func NewZohoSyncEndpoints() []*api.Endpoint {
	return []*api.Endpoint{}
}

// Client API for ZohoSync service

type ZohoSyncService interface {
	SyncLeads(ctx context.Context, in *common.EmptyDto, opts ...client.CallOption) (*common.Response, error)
	AddAppoint(ctx context.Context, in *ZohoB2CLead, opts ...client.CallOption) (*common.Response, error)
}

type zohoSyncService struct {
	c    client.Client
	name string
}

func NewZohoSyncService(name string, c client.Client) ZohoSyncService {
	return &zohoSyncService{
		c:    c,
		name: name,
	}
}

func (c *zohoSyncService) SyncLeads(ctx context.Context, in *common.EmptyDto, opts ...client.CallOption) (*common.Response, error) {
	req := c.c.NewRequest(c.name, "ZohoSync.SyncLeads", in)
	out := new(common.Response)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *zohoSyncService) AddAppoint(ctx context.Context, in *ZohoB2CLead, opts ...client.CallOption) (*common.Response, error) {
	req := c.c.NewRequest(c.name, "ZohoSync.AddAppoint", in)
	out := new(common.Response)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for ZohoSync service

type ZohoSyncHandler interface {
	SyncLeads(context.Context, *common.EmptyDto, *common.Response) error
	AddAppoint(context.Context, *ZohoB2CLead, *common.Response) error
}

func RegisterZohoSyncHandler(s server.Server, hdlr ZohoSyncHandler, opts ...server.HandlerOption) error {
	type zohoSync interface {
		SyncLeads(ctx context.Context, in *common.EmptyDto, out *common.Response) error
		AddAppoint(ctx context.Context, in *ZohoB2CLead, out *common.Response) error
	}
	type ZohoSync struct {
		zohoSync
	}
	h := &zohoSyncHandler{hdlr}
	return s.Handle(s.NewHandler(&ZohoSync{h}, opts...))
}

type zohoSyncHandler struct {
	ZohoSyncHandler
}

func (h *zohoSyncHandler) SyncLeads(ctx context.Context, in *common.EmptyDto, out *common.Response) error {
	return h.ZohoSyncHandler.SyncLeads(ctx, in, out)
}

func (h *zohoSyncHandler) AddAppoint(ctx context.Context, in *ZohoB2CLead, out *common.Response) error {
	return h.ZohoSyncHandler.AddAppoint(ctx, in, out)
}
